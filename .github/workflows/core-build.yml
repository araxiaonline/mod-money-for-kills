name: core-build
on:
  push:
    branches:
      - master

jobs:
  release-on-push:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/araxiaonline/ac-wotlk-worldserver-devcontainer:latest
      options: --user root
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get repository name
        id: repo-name
        run: echo "REPO_NAME=$(basename $GITHUB_REPOSITORY | sed 's|.*/||')" >> $GITHUB_ENV

      - name: Copy module to container
        run: |
          mkdir -p /azerothcore/modules/${{ env.REPO_NAME }}
          cp -r . /azerothcore/modules/${{ env.REPO_NAME }}

      - name: Rebuild Modules with Caching
        run: |
          cd /azerothcore/build \
          && cmake /azerothcore \
             -DCMAKE_INSTALL_PREFIX="/azerothcore/env/dist"  \
             -DAPPS_BUILD="all"                              \
             -DTOOLS_BUILD="all"                             \
             -DSCRIPTS="static"                              \
             -DMODULES="static"                              \
             -DWITH_WARNINGS="ON"                            \
             -DCMAKE_BUILD_TYPE="RelWithDebInfo"             \
             -DCMAKE_CXX_COMPILER="clang++"                  \
             -DCMAKE_C_COMPILER="clang"                      \
             -DCMAKE_CXX_COMPILER_LAUNCHER="ccache"          \
             -DCMAKE_C_COMPILER_LAUNCHER="ccache"            \
             -DBoost_USE_STATIC_LIBS="ON"                    \
          && cmake --build . --config "RelWithDebInfo" -j $(($(nproc) + 1))

      - name: Install cppcheck
        run: apt-get update && apt-get install -y cppcheck
      - name: cpp check
        run: |
          cppcheck --force --inline-suppr --output-file=report.txt /azerothcore/modules/${{ env.REPO_NAME }}
          if [ -s report.txt ]; then
            cat report.txt
            exit 1
          fi
